#!/bin/perl -w

use Getopt::Std;
use POSIX;
use strict;

my $serialport = '/dev/ttyS0';

sub initport($) {
  my $serialport = shift;
  sysopen PORT, $serialport, O_RDWR | O_NOCTTY | O_NONBLOCK
    or die "$! opening device $serialport\n";

  my $termios = new POSIX::Termios;
  $termios->getattr(fileno PORT);
  $termios->setcflag(CS8 | CREAD | CLOCAL);
  $termios->setiflag(0);
  $termios->setlflag(0);
  $termios->setoflag(0);

  sub B57600 { 0010001 };
  $termios->setospeed(&B57600);
  $termios->setispeed(&B57600);

  $termios->setattr(fileno PORT, TCSAFLUSH);
  tcflush(fileno PORT, TCIOFLUSH);
  return *PORT;
}

sub request($$) {
  my ($fh, $req, $sum, $asc, $res) = (shift, shift, 0, 0, "");
  foreach $asc (unpack 'C*', $req) {
    $sum ^= $asc;
  }
  $req = sprintf "\$%s*%02X\015\012", $req, $sum;
  syswrite $fh, $req, length $req;

  until ($res =~ /\021$/s) {
    my $rin = ""; vec($rin, fileno $fh, 1) = 1;
    last unless (select $rin, undef, $rin, 0.5)[0] > 0;
    my $bytes; sysread $fh, $bytes, 16384;
    $res .= $bytes;
  }
  $res =~ s/^\023//s; $res =~ s/\021$//s; $res =~ s/\015?\012/\n/sg;
  return $res;
}

sub listpoints($) {
  my $fh = shift;
  my $response = request $fh, 'PBRWPS,';
  foreach (split /\n+/, $response) {
    next unless /^\$PBRWPS,(.*?)(\*[A-F\d]+)?$/i;
    my @point = split /,/, $1;
    my $latitude = substr($point[0], 0, 2) + substr($point[0], 2)/60.0;
    my $longitude = substr($point[2], 0, 3) + substr($point[2], 3)/60.0;
    $latitude = -$latitude if uc $point[1] eq 'S';
    $longitude = -$longitude if uc $point[3] eq 'W';
    my $name = $point[5] =~ /\S/ ? $point[5] : $point[4]; $name =~ s/\s+$//;
    printf "%+0.6f, %+0.6f, %04d, %s\n", $latitude, $longitude,
           $point[6], $name;
  }
}

sub delpoint($$) {
  my ($fh, $name) = (shift, shift);
  request $fh, sprintf 'PBRWPX,%-17.17s', $name;
}

sub clearpoints($) {
  my $fh = shift;
  request $fh, 'PBRWPX,,';
}

sub addpoints($) {
  my $fh = shift;
  while (my $line = <>) {
    chomp $line;
    my ($latitude, $longitude, $altitude, $name) = split /\s*,\s*/, $line, 4;
    return unless $latitude =~ /^[-+]?\d+(\.\d+)?$/;
    return unless $longitude =~ /^[-+]?\d+(\.\d+)?$/;
    return if abs($latitude) > 90.0 or abs($longitude) > 180.0;
    $latitude = sprintf '%02d%06.3f,%s', abs(int $latitude),
      60*abs($latitude - int $latitude), $latitude < 0 ? 'S' : 'N';
    $longitude = sprintf '%03d%06.3f,%s', abs(int $longitude),
      60*abs($longitude - int $longitude), $longitude < 0 ? 'W' : 'E';
    request $fh, sprintf "PBRWPR,%s,%s,,%-17.17s,%04d", $latitude,
                         $longitude, $name, $altitude;
  }
}

sub usage() {
  print STDERR <<"EOF";
Usage: compeowpt [-d PORT] [list]         list waypoints stored on device
       compeowpt [-d PORT] add [FILE]...  add new waypoints to device
       compeowpt [-d PORT] del NAME       delete waypoint NAME from device
       compeowpt [-d PORT] clear          delete all waypoints from device
Default serial port: $serialport
EOF
  exit 1;
}

sub HELP_MESSAGE { usage; }
sub VERSION_MESSAGE { usage; }

my %option = ();
getopts "d:", \%option or usage;
$serialport = $ENV{COMPEO} if defined $ENV{COMPEO};
$serialport = $option{d} if defined $option{d};
my $fh = initport $serialport;

my $command = (@ARGV == 0 ? 'list' : lc shift @ARGV);
if ($command eq 'list' and @ARGV == 0) {
  listpoints $fh;
} elsif ($command eq 'add') {
  addpoints $fh;
} elsif ($command eq 'del' and @ARGV == 1) {
  delpoint $fh, $ARGV[0];
} elsif ($command eq 'clear' and @ARGV == 0) {
  clearpoints $fh;
} else {
  usage();
}
